.\" Manpage for megacrontab.
.\" Contact mpelletier@wikimedia.org to correct errors or typos.
.TH MEGACRONTAB 5 "16 May 2014" "0.4.1" "Wikimedia"
.SH NAME
megacrontab \- tables for driving cron
.SH DESCRIPTION
A crontab file contains instructions to the megacrond(8) daemon of the general
form: ``run this command at this time on this date''. Each user has their own
crontab, and commands in any given crontab will be executed as the user who
owns the crontab.
.PP
Blank lines and leading spaces and tabs are ignored. Lines whose first
non-space character is a hash-sign (#) are comments, and are ignored. Note
that comments are not allowed on the same line as cron commands, since they
will be taken to be part of the command. Similarly, comments are not allowed
on the same line as environment variable settings.
.PP
An active line in a crontab will be either an environment setting or a cron
command. The crontab file is parsed from top to bottom, so any environment
settings will affect only the cron commands below them in the file. An
environment setting is of the form,
.PP
    name = value
.PP
where the spaces around the equal-sign (=) are optional, and any subsequent
non-leading spaces in
.I value
will be part of the value assigned to
.IR name .
The
.I value
string may be placed in quotes (single or double, but matching) to preserve
leading or trailing blanks. To define an empty variable, quotes
.B must
be used. The  
.I value
string is 
.B not
parsed for environmental substitutions or replacement of variables, thus lines
like
.PP
    PATH = $HOME/bin:$PATH
.PP
will not work as you might expect. And neither will this work
.PP
    A=1
    B=2
    C=$A $B
.PP
There will not be any subsitution for the defined variables in the last value.
.PP
An alternative for setting up the commands path is using the fact that many
shells will treat the tilde(~) as substitution of $HOME, so if you use 
.I bash
for your tasks you can use this:
.PP
     SHELL=/bin/bash
     PATH=~/bin:/usr/bin/:/bin
.PP
The format of a cron command is very much the V7 standard, with a number of
upward-compatible extensions.  Each line has five time and date fields,
followed by a command.
.PP
Commands are executed by megacrond(8) when the minute, hour, and month of year
fields match the current time, and when at least one of the two day fields (day
of month, or day of week) match the current time (see ``Note'' below).
megacrond(8) examines cron entries once every minute. The time and date fields
are:
.IP
.ta 1.5i
field allowed values
.br
-----	--------------
.br
minute	0-59
.br
hour	0-23
.br
day of month	1-31
.br
month	1-12 (or names, see below)
.br
day of week	0-7 (0 or 7 is Sun, or use names)
.br
.PP
A field may be an asterisk (*), which always stands for ``first\-last''.
.PP
Ranges of numbers are allowed.  Ranges are two numbers separated with a hyphen.
The specified range is inclusive.  For example, 8-11 for an ``hours'' entry
specifies execution at hours 8, 9, 10 and 11.
.PP
Lists are allowed.  A list is a set of numbers (or ranges) separated by commas.
Examples: ``1,2,5,9'', ``0-4,8-12''.
.PP
Step values can be used in conjunction with ranges. Following a range with
``/<number>'' specifies skips of the number's value through the range. For
example, ``0-23/2'' can be used in the hours field to specify command execution
every other hour (the alternative in the V7 standard is 
``0,2,4,6,8,10,12,14,16,18,20,22''). Steps are also permitted after an
asterisk, so if you want to say ``every two hours'', just use ``*/2''.
.PP
Names can also be used for the ``month'' and ``day of week'' fields. Use the
first three letters of the particular day or month (case doesn't matter).
Ranges or lists of names are not allowed.
.PP
The ``sixth'' field (the rest of the line) specifies the command to be run.


.\" TODO
.\"The entire command portion of the line, up to a newline or %character, will be
.\"executed by (/bin/sh?)

.\"Percent-signs (%) in the command, unless escaped with backslash
.\"(\\), will be changed into newline characters, and all data
.\"after the first % will be sent to the command as standard
.\"input. There is no way to split a single command line onto multiple
.\"lines, like the shell's trailing "\\".
.PP
Note: The day of a command's execution can be specified by two fields \(em day
of month, and day of week. If both fields are restricted (i.e., aren't *), the
command will be run when either field matches the current time. For example,
.br
``30 4 1,15 * 5''
would cause a command to be run at 4:30 am on the 1st and 15th of each month,
plus every Friday. One can, however, achieve the desired result by adding a
test to the command (see the last example in EXAMPLE CRON FILE below).

.\".PP
.\"Instead of the first five fields, one of eight special strings may appear:
.\".IP
.\".ta 1.5i
.\" string	meaning
.\".br
.\"------	-------
.\".br
.\"@reboot	Run once, at startup.
.\".br
.\"@yearly	Run once a year, "0 0 1 1 *".
.\".br
.\"@annually	(same as @yearly)
.\".br
.\"@monthly	Run once a month, "0 0 1 * *".
.\".br
.\"@weekly	Run once a week, "0 0 * * 0".
.\".br
.\"@daily	Run once a day, "0 0 * * *".
.\".br
.\"@midnight	(same as @daily)
.\".br
.\"@hourly	Run once an hour, "0 * * * *".
.\".br
.\".PP
.\"Please note that startup, as far as @reboot is concerned, is the time when
.\"the megacrond(8) daemon startup. In particular, it may be before some system
.\"daemons, or other facilities, were startup.  This is due to the boot order
.\"sequence of the machine.
